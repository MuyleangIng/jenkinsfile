pipeline {
    agent any
    parameters {
        booleanParam(name: "CLEAN_WS", defaultValue: false, description: "Sample boolean parameter")
        booleanParam(name: "TEST_BOOLEAN", defaultValue: true, description: "Sample boolean parameter")
        string(name: "TEST_STRING", defaultValue: "dara", trim: true, description: "Sample string parameter")
        text(name: "TEST_TEXT", defaultValue: "Jenkins Pipeline Tutorial", description: "Sample multi-line text parameter")
        password(name: "TEST_PASSWORD", defaultValue: "SECRET", description: "Sample password parameter")
        choice(name: "TEST_CHOICE", choices: ["production", "staging", "development"], description: "Sample multi-choice parameter")
    }
    environment {
        imageTag = "${BUILD_NUMBER}"
    }
    stages {
        stage('Git Clone') {
            steps {
                script {
                    echo "Clean_ws: ${CLEAN_WS}"
                    echo "TEST_BOOLEAN: ${params.TEST_BOOLEAN}"
                    // Assuming you want to uncomment this:
                    git 'https://github.com/MuyleangIng/react-project.git'
                    echo "Image Tag: ${env.imageTag}"
                    
                    def deploy = params.TEST_CHOICE
                    if (deploy == 'production') {
                        echo "Deploy to production"
                    } else if (deploy == 'development') {
                        echo "Deploy to development"
                    } else if (deploy == 'staging') {
                        echo "Deploy to staging"
                    }
                    def clean_wss = params.CLEAN_WS
                    echo "Clean Workspace: ${clean_wss}"
                    if (clean_wss = true) {
                        cleanWs()
                    }
       
                }
            }
        }
        
        stage('Deploy') {
            steps {
                sh """
                    touch deploy.txt
                    echo 'JOB: ${JOB_NAME}, BUILD: ${BUILD_NUMBER}, deploy success!'
                """
            }
        }
    }
}
